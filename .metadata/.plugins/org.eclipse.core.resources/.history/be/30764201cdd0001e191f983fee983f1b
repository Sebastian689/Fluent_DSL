package main;

import main.metamodel.Machine;
import main.metamodel.State;
import main.metamodel.Transition;

import java.util.HashMap;
import java.util.Map;


public class MachineInterpreter {
	private State currentState;
	private Map<String, Integer> variables;
	
    public void run(Machine m) {
    	currentState = m.getInitialState();
    	variables = new HashMap<>();
    	
    	while (!currentState.isFinal()) {
    		Transition transition = findValidTransition(currentState);
    		if (transition != null) {
    			executeTransition(transition);
    			currentState = transition.getTarget();
    		}
    		else {
    			break;
    		}
    	}
    }
    
    private Transition findValidTransition(State state) {
        for (Transition transition : state.getTransitions()) {
            if (transition.isValid(variables)) {
                return transition;
            }
        }
        return null;
    }

    public State getCurrentState() {
        // TODO Auto-generated method stub
        return null;
    }

    public void processEvent(String string) {
        // TODO Auto-generated method stub

    }

    public int getInteger(String string) {
        // TODO Auto-generated method stub
        return 0;
    }

}
